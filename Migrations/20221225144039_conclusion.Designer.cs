// <auto-generated />
using System;
using MMSystem.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MMSystem.Migrations
{
    [DbContext(typeof(AppDbCon))]
    [Migration("20221225144039_conclusion")]
    partial class conclusion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MMSystem.Model.Administrator", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstMACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecandMACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationalNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("userNetwork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("MMSystem.Model.ClasificationSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("clasifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "شكوى",
                            state = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "مقال صحفي",
                            state = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "ادارية",
                            state = true
                        },
                        new
                        {
                            Id = 4,
                            Name = "قرارات",
                            state = true
                        },
                        new
                        {
                            Id = 5,
                            Name = "اجتماعات",
                            state = true
                        },
                        new
                        {
                            Id = 6,
                            Name = "اخرى",
                            state = true
                        },
                        new
                        {
                            Id = 7,
                            Name = "تعميم",
                            state = true
                        });
                });

            modelBuilder.Entity("MMSystem.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("perent")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "الادارة العامة للتحقيق ",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "لجنة الحضور والانصراف",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 5,
                            DepartmentName = "الادارة العامة للرقابة علي رئاسة الوزراء",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 8,
                            DepartmentName = "مكتب مستشاري رئيس الهيئة",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 13,
                            DepartmentName = "مكتب المراجعة  الداخلية",
                            perent = 10,
                            state = true
                        },
                        new
                        {
                            Id = 14,
                            DepartmentName = "مكتب التفتيش وتقييم الاداء ",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 16,
                            DepartmentName = "مكتب التخطيط",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 17,
                            DepartmentName = "مكتب التوثيق وتقنية المعلومات",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 19,
                            DepartmentName = "مكتب المحفوظات ",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 20,
                            DepartmentName = "مكتب الشؤون القانونية ودراسة التشريعات",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 21,
                            DepartmentName = "مكتب رئيس الهيئة",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 22,
                            DepartmentName = "مكتب وكيل الهيئة",
                            perent = 21,
                            state = true
                        },
                        new
                        {
                            Id = 25,
                            DepartmentName = "مكتب الشؤون الاعلامية",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 26,
                            DepartmentName = "الادارة العامة للرقابة الخارجية ",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 28,
                            DepartmentName = "لجنة صندوق العاملين",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 32,
                            DepartmentName = "مكتب التعاون الدولي والتواصل",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 34,
                            DepartmentName = " وحدة الحماية الشخصية",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 35,
                            DepartmentName = "وحدة العلاقات الخاصة بمكتب الرئيس",
                            perent = 1,
                            state = true
                        },
                        new
                        {
                            Id = 36,
                            DepartmentName = "مكتب التحري والمعلومات",
                            perent = 10,
                            state = true
                        },
                        new
                        {
                            Id = 38,
                            DepartmentName = "الإدارة العامة للرقابة علي القطاعات الخدمية والأمنية",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 39,
                            DepartmentName = "الإدارة العامة للرقابة علي القطاعات الإنتاجية والبنية الأساسية",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 40,
                            DepartmentName = "الإدارة العامة للرقابة علي القطاعات الاقتصادية والاستثمار",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 41,
                            DepartmentName = "الإدارةالعامة للموارد البشرية",
                            perent = 21,
                            state = true
                        },
                        new
                        {
                            Id = 42,
                            DepartmentName = "الإدارةالعامة للشؤون الإدارية والخدمات",
                            perent = 21,
                            state = true
                        },
                        new
                        {
                            Id = 43,
                            DepartmentName = "الإدارةالعامة للشؤون المالية",
                            perent = 21,
                            state = true
                        },
                        new
                        {
                            Id = 44,
                            DepartmentName = "لجنة الموقع",
                            perent = 10,
                            state = true
                        },
                        new
                        {
                            Id = 49,
                            DepartmentName = "فرع العزيزية",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 50,
                            DepartmentName = "فرع غرب طرابلس",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 51,
                            DepartmentName = "فرع مصراته",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 52,
                            DepartmentName = "فرع ترهونة",
                            perent = 14,
                            state = true
                        },
                        new
                        {
                            Id = 53,
                            DepartmentName = "فرع الزنتان",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 54,
                            DepartmentName = "لجنة ربط الفروع ",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 55,
                            DepartmentName = "لجنة متابعة تنفيد مبني الهيئة   ",
                            perent = 0,
                            state = true
                        },
                        new
                        {
                            Id = 56,
                            DepartmentName = "فرع شرق طرابلس",
                            perent = 0,
                            state = true
                        });
                });

            modelBuilder.Entity("MMSystem.Model.External_Mail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Attachments")
                        .HasColumnType("bit");

                    b.Property<int>("MailID")
                        .HasColumnType("int");

                    b.Property<int>("Sectionid")
                        .HasColumnType("int");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<int>("SectorType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Send_of_Ex_mail")
                        .HasColumnType("datetime2");

                    b.Property<int>("action")
                        .HasColumnType("int");

                    b.Property<string>("action_required_by_the_entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number_of_copies")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MailID")
                        .IsUnique();

                    b.HasIndex("Sectionid");

                    b.ToTable("External_Mails");
                });

            modelBuilder.Entity("MMSystem.Model.Extrenal_inbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MailID")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Send_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("action")
                        .HasColumnType("int");

                    b.Property<int>("entity_reference_number")
                        .HasColumnType("int");

                    b.Property<int>("office_type")
                        .HasColumnType("int");

                    b.Property<int>("procedure_type")
                        .HasColumnType("int");

                    b.Property<string>("section_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("to")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MailID")
                        .IsUnique();

                    b.HasIndex("SectionId");

                    b.ToTable("Extrenal_Inboxes");
                });

            modelBuilder.Entity("MMSystem.Model.Extrmal_Section", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Section_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("perent")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Extrmal_Sections");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Section_Name = "فروع الهيئة ",
                            perent = 0,
                            state = true,
                            type = 1
                        },
                        new
                        {
                            id = 2,
                            Section_Name = "فرع سبها ",
                            perent = 1,
                            state = true,
                            type = 1
                        },
                        new
                        {
                            id = 3,
                            Section_Name = "فرع مصراته ",
                            perent = 1,
                            state = true,
                            type = 1
                        },
                        new
                        {
                            id = 4,
                            Section_Name = "الشركات الوطنية ",
                            perent = 0,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 5,
                            Section_Name = "الشركة العامة للكهرباء  ",
                            perent = 4,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 6,
                            Section_Name = "شركة المياه والصرف الصحي ",
                            perent = 4,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 7,
                            Section_Name = "الشركات الاجنبية ",
                            perent = 0,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 8,
                            Section_Name = "Oil and Gas",
                            perent = 7,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 9,
                            Section_Name = "AVA",
                            perent = 7,
                            state = true,
                            type = 2
                        },
                        new
                        {
                            id = 10,
                            Section_Name = "ذات المسؤولية المحدودة",
                            perent = 0,
                            state = true,
                            type = 3
                        },
                        new
                        {
                            id = 11,
                            Section_Name = "النمو التقني",
                            perent = 10,
                            state = true,
                            type = 3
                        });
                });

            modelBuilder.Entity("MMSystem.Model.HistortyName", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("histortyNames");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            name = "اضافة بريد"
                        },
                        new
                        {
                            ID = 2,
                            name = " تعديل بريد"
                        },
                        new
                        {
                            ID = 3,
                            name = "حدف بريد"
                        },
                        new
                        {
                            ID = 4,
                            name = "اضافة صورة"
                        },
                        new
                        {
                            ID = 5,
                            name = "حدف صورة"
                        },
                        new
                        {
                            ID = 6,
                            name = "اضافة رد"
                        },
                        new
                        {
                            ID = 7,
                            name = "حذف رد"
                        },
                        new
                        {
                            ID = 8,
                            name = "  اضافة ادارة"
                        },
                        new
                        {
                            ID = 9,
                            name = "  حدف ادارة"
                        },
                        new
                        {
                            ID = 10,
                            name = "اضافة مستخدم "
                        },
                        new
                        {
                            ID = 11,
                            name = "تعديل مستخدم"
                        },
                        new
                        {
                            ID = 12,
                            name = "  الغاء تفعيل مستخدم"
                        },
                        new
                        {
                            ID = 13,
                            name = " تم عرض الصورة "
                        },
                        new
                        {
                            ID = 14,
                            name = " ارسال بريد "
                        },
                        new
                        {
                            ID = 15,
                            name = " قراءة البريد"
                        },
                        new
                        {
                            ID = 16,
                            name = " مرفقات"
                        },
                        new
                        {
                            ID = 17,
                            name = " عدد النسخ"
                        },
                        new
                        {
                            ID = 18,
                            name = "طباعة حافظة"
                        },
                        new
                        {
                            ID = 19,
                            name = "تسجيل الدخول"
                        },
                        new
                        {
                            ID = 20,
                            name = "اضافة صورة رد"
                        },
                        new
                        {
                            ID = 21,
                            name = "طباعة مستندات الرد"
                        },
                        new
                        {
                            ID = 22,
                            name = "طباعة مستندات البريد  "
                        },
                        new
                        {
                            ID = 23,
                            name = "عرض مستندات الرد  "
                        },
                        new
                        {
                            ID = 24,
                            name = "التسليم "
                        },
                        new
                        {
                            ID = 25,
                            name = "ملاحظات  في المحفوظات "
                        });
                });

            modelBuilder.Entity("MMSystem.Model.Historyes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistortyNameID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currentUser")
                        .HasColumnType("int");

                    b.Property<int>("mailid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistortyNameID");

                    b.ToTable("History");
                });

            modelBuilder.Entity("MMSystem.Model.Mail", b =>
                {
                    b.Property<int>("MailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Of_Mail")
                        .HasColumnType("datetime2");

                    b.Property<int>("Department_Id")
                        .HasColumnType("int");

                    b.Property<int>("Genaral_inbox_Number")
                        .HasColumnType("int");

                    b.Property<int>("Genaral_inbox_year")
                        .HasColumnType("int");

                    b.Property<int>("Mail_Number")
                        .HasColumnType("int");

                    b.Property<string>("Mail_Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mail_Type")
                        .HasColumnType("int");

                    b.Property<bool>("Under_the_procedure")
                        .HasColumnType("bit");

                    b.Property<int>("clasification")
                        .HasColumnType("int");

                    b.Property<string>("conclusion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("insert_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_send")
                        .HasColumnType("bit");

                    b.Property<string>("old_mail_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("MailID");

                    b.HasIndex("userId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("MMSystem.Model.MailStatus", b =>
                {
                    b.Property<int>("flag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("inbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("flag");

                    b.ToTable("MailStatuses");

                    b.HasData(
                        new
                        {
                            flag = 1,
                            inbox = "",
                            sent = "لم ترسل",
                            state = true
                        },
                        new
                        {
                            flag = 2,
                            inbox = "لم يتم قراءة البريد",
                            sent = "لم تقرأ",
                            state = true
                        },
                        new
                        {
                            flag = 3,
                            inbox = "تم قراءة البريد",
                            sent = "قرأت ",
                            state = true
                        },
                        new
                        {
                            flag = 4,
                            inbox = "تم الرد من قيلك ",
                            sent = "تم الرد",
                            state = true
                        },
                        new
                        {
                            flag = 5,
                            inbox = "يوجد رد جديد من الادارة المرسلة",
                            sent = "تم الرد من قبلك",
                            state = true
                        },
                        new
                        {
                            flag = 6,
                            inbox = "تم سحب البريد من قبلك",
                            sent = "تم السحب",
                            state = true
                        });
                });

            modelBuilder.Entity("MMSystem.Model.Mail_Resourcescs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MailID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MailID");

                    b.ToTable("Mail_Resourcescs");
                });

            modelBuilder.Entity("MMSystem.Model.Measures", b =>
                {
                    b.Property<int>("MeasuresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MeasuresName")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("MeasuresId");

                    b.ToTable("measures");

                    b.HasData(
                        new
                        {
                            MeasuresId = 1,
                            MeasuresName = "للعلم",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 2,
                            MeasuresName = "للرأي",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 3,
                            MeasuresName = "للاجراء",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 4,
                            MeasuresName = "للدراسة",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 5,
                            MeasuresName = "للاختصاص",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 6,
                            MeasuresName = "للبحث والاشادة",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 7,
                            MeasuresName = "لاعداد موقف",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 8,
                            MeasuresName = "للمتابعة",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 9,
                            MeasuresName = "للتحقيق",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 10,
                            MeasuresName = "لامانع",
                            state = true
                        },
                        new
                        {
                            MeasuresId = 11,
                            MeasuresName = "للاهتمام",
                            state = true
                        });
                });

            modelBuilder.Entity("MMSystem.Model.Reply", b =>
                {
                    b.Property<int>("ReplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("mail_detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("send_ToId")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("ReplyId");

                    b.HasIndex("send_ToId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("MMSystem.Model.Reply_Resources", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int>("ReplyId")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ReplyId");

                    b.ToTable("Reply_Resources");
                });

            modelBuilder.Entity("MMSystem.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "الصادر",
                            code = "a",
                            state = true
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "اضافة بريد جديد",
                            code = "b",
                            state = true
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "اضافة بريد داخلي",
                            code = "c",
                            state = true
                        },
                        new
                        {
                            RoleId = 4,
                            Name = "اضافة بريد وارد خارجي",
                            code = "d",
                            state = true
                        },
                        new
                        {
                            RoleId = 5,
                            Name = "اضافة بريد صادر خارجي",
                            code = "e",
                            state = true
                        },
                        new
                        {
                            RoleId = 6,
                            Name = " الرد علي الصادر",
                            code = "f",
                            state = true
                        },
                        new
                        {
                            RoleId = 7,
                            Name = " عرض الصورة الصادرة",
                            code = "g",
                            state = true
                        },
                        new
                        {
                            RoleId = 10,
                            Name = "الاستلام",
                            code = "j",
                            state = true
                        },
                        new
                        {
                            RoleId = 11,
                            Name = "السحب",
                            code = "k",
                            state = true
                        },
                        new
                        {
                            RoleId = 12,
                            Name = "الاحصائيات",
                            code = "l",
                            state = true
                        },
                        new
                        {
                            RoleId = 13,
                            Name = "تقارير المتابعة",
                            code = "m",
                            state = true
                        },
                        new
                        {
                            RoleId = 14,
                            Name = "الوارد",
                            code = "n",
                            state = true
                        },
                        new
                        {
                            RoleId = 15,
                            Name = "البحث في البريد الداخلي",
                            code = "o",
                            state = true
                        },
                        new
                        {
                            RoleId = 16,
                            Name = "البحث في البريد الوارد الخارجي",
                            code = "p",
                            state = true
                        },
                        new
                        {
                            RoleId = 17,
                            Name = "البحث في البريد صادر الخارجي",
                            code = "q",
                            state = true
                        },
                        new
                        {
                            RoleId = 18,
                            Name = "الرد علي الوارد",
                            code = "r",
                            state = true
                        },
                        new
                        {
                            RoleId = 19,
                            Name = "عرض الصورة الواردة",
                            code = "s",
                            state = true
                        },
                        new
                        {
                            RoleId = 20,
                            Name = "تصوير داخلي",
                            code = "t",
                            state = true
                        },
                        new
                        {
                            RoleId = 21,
                            Name = "تصوير  صادر خارجي",
                            code = "u",
                            state = true
                        },
                        new
                        {
                            RoleId = 22,
                            Name = "تصوير وارد خارجي",
                            code = "v",
                            state = true
                        },
                        new
                        {
                            RoleId = 23,
                            Name = "تعديل الداخلي",
                            code = "w",
                            state = true
                        },
                        new
                        {
                            RoleId = 24,
                            Name = "تعديل وارد خارجي",
                            code = "x",
                            state = true
                        },
                        new
                        {
                            RoleId = 25,
                            Name = "تعديل صادر خارجي",
                            code = "y",
                            state = true
                        },
                        new
                        {
                            RoleId = 26,
                            Name = " ارسال بريد داخلي",
                            code = "z",
                            state = true
                        },
                        new
                        {
                            RoleId = 27,
                            Name = " ارسال وارد خارجي",
                            code = "1",
                            state = true
                        },
                        new
                        {
                            RoleId = 28,
                            Name = " ارسال صادر خارجي",
                            code = "2",
                            state = true
                        },
                        new
                        {
                            RoleId = 29,
                            Name = " حذف بريد داخلي",
                            code = "3",
                            state = true
                        },
                        new
                        {
                            RoleId = 30,
                            Name = " حذف وارد خارجي",
                            code = "4",
                            state = true
                        },
                        new
                        {
                            RoleId = 31,
                            Name = " حذف صادر خارجي",
                            code = "5",
                            state = true
                        },
                        new
                        {
                            RoleId = 32,
                            Name = " حذف صورة",
                            code = "6",
                            state = true
                        },
                        new
                        {
                            RoleId = 33,
                            Name = "  التعديل علي البريد بعد الارسال",
                            code = "7",
                            state = true
                        });
                });

            modelBuilder.Entity("MMSystem.Model.Send_to", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MailID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Send_time")
                        .HasColumnType("datetime2");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("flag")
                        .HasColumnType("int");

                    b.Property<bool>("isMulti")
                        .HasColumnType("bit");

                    b.Property<DateTime>("time_of_read")
                        .HasColumnType("datetime2");

                    b.Property<int>("to")
                        .HasColumnType("int");

                    b.Property<int>("type_of_send")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MailID");

                    b.ToTable("Sends");
                });

            modelBuilder.Entity("MMSystem.Model.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("MMSystem.Model.Administrator", b =>
                {
                    b.HasOne("MMSystem.Model.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MMSystem.Model.External_Mail", b =>
                {
                    b.HasOne("MMSystem.Model.Mail", "Mail")
                        .WithOne("external_Mail")
                        .HasForeignKey("MMSystem.Model.External_Mail", "MailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MMSystem.Model.Extrmal_Section", "Section")
                        .WithMany("External_Mails")
                        .HasForeignKey("Sectionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("MMSystem.Model.Extrenal_inbox", b =>
                {
                    b.HasOne("MMSystem.Model.Mail", "Mail")
                        .WithOne("extrenal_Inbox")
                        .HasForeignKey("MMSystem.Model.Extrenal_inbox", "MailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MMSystem.Model.Extrmal_Section", "Section")
                        .WithMany("Extrenal_Inboxes")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("MMSystem.Model.Historyes", b =>
                {
                    b.HasOne("MMSystem.Model.HistortyName", "HistortyName")
                        .WithMany("Historyes")
                        .HasForeignKey("HistortyNameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistortyName");
                });

            modelBuilder.Entity("MMSystem.Model.Mail", b =>
                {
                    b.HasOne("MMSystem.Model.Administrator", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("MMSystem.Model.Mail_Resourcescs", b =>
                {
                    b.HasOne("MMSystem.Model.Mail", "Mail")
                        .WithMany()
                        .HasForeignKey("MailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("MMSystem.Model.Reply", b =>
                {
                    b.HasOne("MMSystem.Model.Send_to", "send_To")
                        .WithMany("replies")
                        .HasForeignKey("send_ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("send_To");
                });

            modelBuilder.Entity("MMSystem.Model.Reply_Resources", b =>
                {
                    b.HasOne("MMSystem.Model.Reply", "Reply")
                        .WithMany("_Resources")
                        .HasForeignKey("ReplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("MMSystem.Model.Send_to", b =>
                {
                    b.HasOne("MMSystem.Model.Mail", "Mail")
                        .WithMany()
                        .HasForeignKey("MailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("MMSystem.Model.UserRoles", b =>
                {
                    b.HasOne("MMSystem.Model.Role", "Role")
                        .WithMany("userRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MMSystem.Model.Administrator", "User")
                        .WithMany("userRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MMSystem.Model.Administrator", b =>
                {
                    b.Navigation("userRoles");
                });

            modelBuilder.Entity("MMSystem.Model.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MMSystem.Model.Extrmal_Section", b =>
                {
                    b.Navigation("External_Mails");

                    b.Navigation("Extrenal_Inboxes");
                });

            modelBuilder.Entity("MMSystem.Model.HistortyName", b =>
                {
                    b.Navigation("Historyes");
                });

            modelBuilder.Entity("MMSystem.Model.Mail", b =>
                {
                    b.Navigation("external_Mail");

                    b.Navigation("extrenal_Inbox");
                });

            modelBuilder.Entity("MMSystem.Model.Reply", b =>
                {
                    b.Navigation("_Resources");
                });

            modelBuilder.Entity("MMSystem.Model.Role", b =>
                {
                    b.Navigation("userRoles");
                });

            modelBuilder.Entity("MMSystem.Model.Send_to", b =>
                {
                    b.Navigation("replies");
                });
#pragma warning restore 612, 618
        }
    }
}
